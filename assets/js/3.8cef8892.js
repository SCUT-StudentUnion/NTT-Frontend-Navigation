(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{169:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"javascript基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript基础","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript基础")]),t._v(" "),s("p",[t._v("用看得懂的话写de教程。")]),t._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("p",[t._v("JavaScript的原始数据类型包括Number、String、Boolean、Null、Undefined、Symbol（ES6新增），此外有Object类型。")]),t._v(" "),s("h3",{attrs:{id:"number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number","aria-hidden":"true"}},[t._v("#")]),t._v(" Number")]),t._v(" "),s("p",[t._v("不区分整数和浮点，注意浮点计算结果是不精确的（由于浮点数的计算方式），对浮点数不建议直接用等号判断两值相等，应当看他们的差是否小于某个值（如0.001）。Infinity（超过Number最大值）、NaN（Not a Number）也是合法的Number。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("关于NaN")]),t._v(" "),s("p",[t._v("NaN是特殊的Number，它也不等于自己，只能通过isNaN()判断。")])]),t._v(" "),s("h3",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string","aria-hidden":"true"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("p",[t._v('单引号‘’或双引号""包裹的字符串。')]),t._v(" "),s("h3",{attrs:{id:"boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean","aria-hidden":"true"}},[t._v("#")]),t._v(" Boolean")]),t._v(" "),s("p",[t._v("Boolean包括'true'、'false'两种取值。比较运算符、&&、||与!都会产生布尔值。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("转换结果为false的取值")]),t._v(" "),s("p",[t._v("NaN、null、undefined、0转Boolean的结果都为false。")])]),t._v(" "),s("h3",{attrs:{id:"null-undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null-undefined","aria-hidden":"true"}},[t._v("#")]),t._v(" null&undefined")]),t._v(" "),s("p",[t._v("null表示空值，undefined表示未赋值，undefined可以用于判断函数参数是否传递。他们是两种数据类型。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("null和undefined的区别")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("null是保留字，而undefined不是。")])]),t._v(" "),s("li",[s("p",[t._v('如果访问不存在的变量，会报错"var is not defined"；访问已声明但未赋值的变量才会得到undefined。')])]),t._v(" "),s("li",[s("p",[t._v("typeof null的结果是object，但null也是一种基本类型而非object，这个混淆是由于typeof以内存低位判断数据类型，object和null的低3位都是0。")])])])]),t._v(" "),s("h3",{attrs:{id:"object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object","aria-hidden":"true"}},[t._v("#")]),t._v(" Object")]),t._v(" "),s("p",[t._v("键-值对的无序集合。键（key）只能是字符串类型，值（value）可以是任意类型。'.'可以用于表示键路径，比如obj.key或obj.obj.a。")]),t._v(" "),s("p",[t._v("Object是引用类型，存储的是针，而其他基本类型存储值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array","aria-hidden":"true"}},[t._v("#")]),t._v(" Array")]),t._v(" "),s("p",[t._v("用[]或new Array()创建，数组可以包含任意类型元素并且提供了相当多的方法。Array属于Object类型。")]),t._v(" "),s("h3",{attrs:{id:"date"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date","aria-hidden":"true"}},[t._v("#")]),t._v(" Date")]),t._v(" "),s("p",[t._v("Date类型提供了丰富的与时间、日期相关的方法，Date()返回当前日期的字符串。Date也属于Object类型。")]),t._v(" "),s("h3",{attrs:{id:"map-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-set","aria-hidden":"true"}},[t._v("#")]),t._v(" Map&Set")]),t._v(" "),s("p",[t._v("ES6新增的数据结构。")]),t._v(" "),s("p",[t._v("Map是一组key-value对结构，key不能重复，否则只保留最新的值。与对象只支持string与symbol相比，Map 的key支持任意类型。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" students "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Peter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bill'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("85")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstudents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//90")]),t._v("\nstudents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Peter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nstudents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Peter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nstudents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Peter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\nstudents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bill'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map { 'Lucy' => 90, 'Bill' => 90 }")]),t._v("\nstudents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bill'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//90")]),t._v("\n")])])]),s("p",[t._v("Set类似集合，由一组不重复的key组成，否则只保留一个。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foods "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Chicken'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Noodles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rice'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfoods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fish'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Set { 'Chicken', 'Noodles', 'Rice', 'fish' }")]),t._v("\nfoods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Noodles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nfoods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rice'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("h3",{attrs:{id:"function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function","aria-hidden":"true"}},[t._v("#")]),t._v(" Function")]),t._v(" "),s("p",[t._v("有趣的是，函数是Object的实例，而Object也是函数的实例。")]),t._v(" "),s("h3",{attrs:{id:"symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symbol","aria-hidden":"true"}},[t._v("#")]),t._v(" Symbol")]),t._v(" "),s("p",[t._v("用于产生唯一标识，除了自己等于自己，两个完全相同的symbol不相等，常用于对象属性、声明唯一常量、定义私有属性。也可以用Symbol.for()创建symbol，如果参数一致，创建的symbol相等。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s3"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("p",[t._v("你可以通过以下方式获取Symbol的description（无需记忆）。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"love"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"and peace"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{ [Symbol(love)]: 'and peace' }")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertySymbols")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[ Symbol(love) ]")]),t._v("\nReflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ownKeys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[ Symbol(love) ]")]),t._v("\n")])])]),s("p",[t._v("Symbol定义了对象的许多实用方法，包括[Symbol.Iterator]、[Symbol.match]、[Symbol.replace]、[Symbol.split]、[Symbol.toPrimitive]、[Symbol.toStringTag]等。toStringTag方法甚至能改变对象的toString方法。")]),t._v(" "),s("h3",{attrs:{id:"typeof-instanceof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof-instanceof","aria-hidden":"true"}},[t._v("#")]),t._v(" typeof&instanceof")]),t._v(" "),s("p",[t._v('typeof返回字符串有以下结果“number”、“string”、“boolean”、“object”、“function”、“undefined”、“symbol”，null打印为“object”。而instanceof用于判断检测对象的类型，包括"Array"、"Function"、"Object"及自定义类/构造函数等。')]),t._v(" "),s("p",[t._v('此外Object.prototype.toString.call()可以准确打印出Null的类型。也可以通过访问".constructor"获取构造函数判断类型。')]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'object'")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("h3",{attrs:{id:"动态类型-类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态类型-类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态类型&类型转换")]),t._v(" "),s("p",[t._v("作为动态语言，JS允许同一个变量在不同时间用作不同类型。")]),t._v(" "),s("h4",{attrs:{id:"使用javascript函数转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用javascript函数转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用JavaScript函数转换")]),t._v(" "),s("p",[t._v("例如全局方法（构造函数）String()、Number()、Date()以及变量的toString()方法等。不同类型还会有独有的方法比如Date变量的getDate()、getDay()，Number变量的toPrecision()等。")]),t._v(" "),s("h4",{attrs:{id:"使用javascript自动转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用javascript自动转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用JavaScript自动转换")]),t._v(" "),s("p",[t._v("变量类型会根据需要发生类型转换，例如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5 因为null=0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN 因为undefined转为数字是NaN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"0null" 因为null="null"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"51" 因为1="1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"51" 因为1="1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//4 因为"5"=5')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"1,21" 数组先转字符串，再加"1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里的代码将会执行，因为“str”可以转为true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以观察到含字符串类型会转为字符串，没有或不能转字符串的话转数字（除加号以外，结果转数字）。")]),t._v(" "),s("p",[t._v("自动转换有一些基础规则，比如Boolean值的转换：true等于1，false等于0，空字符串、空数组和null等于0，非纯数字字符串转为NaN等。")]),t._v(" "),s("p",[t._v('有趣的是，"0"可以转为Boolean的“true”，但“0”转为数字0之后再转Boolean就会变成“false”。空数组也可以转“true”，转数字之后也为0。')]),t._v(" "),s("h3",{attrs:{id:"基本类型-基本类型包装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型-基本类型包装","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本类型&基本类型包装")]),t._v(" "),s("p",[t._v("除了Object类型存储的是引用，所有类型都是基本类型（存储值），但除了null和undefined，他们都像对象一样拥有自己的方法。这不是因为基本类型具有方法，而是在调用基本类型的方法时，JS引擎自动包装了基本类型，调用结束后销毁对象。")]),t._v(" "),s("p",[t._v("因此，向基本类型添加属性是无效的，因为添加完成后临时对象即被销毁，但可以向其原型添加属性和方法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str'")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n相当于做了这些事\nvar _str = new String(str)\nstr = _str.toUpperCase()\n*/")]),t._v("\n")])])]),s("h2",{attrs:{id:"变量声明-declaration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量声明-declaration","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量声明 Declaration")]),t._v(" "),s("h3",{attrs:{id:"var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var","aria-hidden":"true"}},[t._v("#")]),t._v(" var")]),t._v(" "),s("p",[t._v("变量用var声明，不用var则作为全局变量。var声明的变量处于全局作用域或函数作用域。")]),t._v(" "),s("h4",{attrs:{id:"变量提升-hoisting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升-hoisting","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量提升 Hoisting")]),t._v(" "),s("p",[t._v("用var声明的变量，可以在声明语句之前使用，但不会初始化（赋值）。因此访问他们虽然不会报错，但会得到undefined。")]),t._v(" "),s("h3",{attrs:{id:"let-const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let-const","aria-hidden":"true"}},[t._v("#")]),t._v(" let&const")]),t._v(" "),s("p",[t._v("ES6中新增了let与const关键字，分别代表块级作用域中的变量与常量，同时不允许重复声明，没有变量提升。")]),t._v(" "),s("h4",{attrs:{id:"块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),s("p",[t._v("由{}包裹的代码块。在for循环中，()与{}是父子块级作用域，也就是说{}用let或const声明的变量不会影响for循环计数。")]),t._v(" "),s("p",[t._v("块级作用域没有变量提升，可以防止在函数内使用上级变量时，后面声明的变量意外覆盖上级变量。")]),t._v(" "),s("p",[t._v("使用var声明变量：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//覆盖了上级变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),s("p",[t._v("使用let声明变量：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//暂时性死区")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//与当前作用域绑定，声明之前不可读取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ReferenceError: Cannot access 'h' before initialization")]),t._v("\n")])])]),s("p",[t._v("同时块间的隔离有助于减少冲突和出错。此前，JS只能用函数作用域来隔离变量，常用的方式就是匿名立即执行函数（匿名IIFE）。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hours"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等同于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hours"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("暂时性死区 temporal dead zone")]),t._v(" "),s("p",[t._v("let和const声明的变量会与代码块绑定，在声明前不能使用同名的上级环境变量，否则会引发报错。")])]),t._v(" "),s("h3",{attrs:{id:"命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),s("p",[t._v("变量名由26字母的大小写、数字、“$“和”_“组成，不能用数字开头。甚至支持中文，但不建议使用，避免引发麻烦。")]),t._v(" "),s("h3",{attrs:{id:"函数声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数声明","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数声明")]),t._v(" "),s("p",[t._v("推荐使用函数表达式"),s("code",[t._v("let func=()=>{}")]),t._v("为变量赋值，因此函数声明也遵循以上规则。如果用"),s("code",[t._v("function func(){}")]),t._v("直接声明函数，ES5中函数声明能完整地提升，ES6虽然规定了行为类似let，但实际可能会先赋值为undefined，不同环境可能有不同的处理。")]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("h3",{attrs:{id:"_1-与"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-与","aria-hidden":"true"}},[t._v("#")]),t._v(" 1 ==与===")]),t._v(" "),s("p",[t._v("==表示在类型转换后相等，===表示类型和值都一样。除非需要用到==的特性，否则建议用===比较。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("比较对象")]),t._v(" "),s("p",[t._v("对象的比较与原始值不同，比较的是引用，因此两个完全相同的数组不相等，除非他们是对同一处的引用。")])]),t._v(" "),s("h3",{attrs:{id:"_2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2","aria-hidden":"true"}},[t._v("#")]),t._v(" 2 &&")]),t._v(" "),s("p",[t._v("‘与’运算符，如果左边表达式的值是false或可以转为false则返回左边表达式的值，否则返回右边表达式的值。")]),t._v(" "),s("p",[t._v("Boolean角度：&&只有当两边都为true，结果才为true，如果左边结果为false，右边不会判断。")]),t._v(" "),s("h3",{attrs:{id:"_3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3","aria-hidden":"true"}},[t._v("#")]),t._v(" 3 ||")]),t._v(" "),s("p",[t._v("‘或’运算符，如果左边表达式的值是true或可以转为true则返回左边表达式的值，否则返回右边表达式的值。")]),t._v(" "),s("p",[t._v("Boolean角度：||只有当两边都为false，结果才为false，如果左边结果为true，右边不会判断。")]),t._v(" "),s("h3",{attrs:{id:"_4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4","aria-hidden":"true"}},[t._v("#")]),t._v(" 4 ...")]),t._v(" "),s("p",[t._v("ES6中的扩展运算符，用在数组或对象前表示取出所有项或属性。")]),t._v(" "),s("h4",{attrs:{id:"用于对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用于对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 用于对象")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{ a: 1, b: 2, c: 3 }")]),t._v("\n")])])]),s("h4",{attrs:{id:"用于数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用于数组","aria-hidden":"true"}},[t._v("#")]),t._v(" 用于数组")]),t._v(" "),s("h5",{attrs:{id:"赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值","aria-hidden":"true"}},[t._v("#")]),t._v(" 赋值")]),t._v(" "),s("p",[t._v("生成数组的拷贝。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newArr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[ 0, 1, 2, 3, 4 ]")]),t._v("\n")])])]),s("h5",{attrs:{id:"解构赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值","aria-hidden":"true"}},[t._v("#")]),t._v(" 解构赋值")]),t._v(" "),s("p",[t._v("结合解构赋值，它还提供了生成数组的方法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ar1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("ar2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nar1"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\nar2"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[ 1, 2, 3 ]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("ar3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ar4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//SyntaxError: Rest element must be last element")]),t._v("\n")])])]),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("扩展运算符只能用在最后一项。")])]),t._v(" "),s("h4",{attrs:{id:"用于函数参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用于函数参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 用于函数参数")]),t._v(" "),s("p",[t._v("除了为数组赋值，还支持作为函数参数。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("任何含Iterator接口的对象都可以通过扩展运算符转为真正的数组。详情见"),s("a",{attrs:{href:"#iterable%E6%8E%A5%E5%8F%A3"}},[t._v("iterable接口")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5","aria-hidden":"true"}},[t._v("#")]),t._v(" 5 + - * /")]),t._v(" "),s("p",[t._v("可以用于各种类型间的运算。")]),t._v(" "),s("h3",{attrs:{id:"_6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6","aria-hidden":"true"}},[t._v("#")]),t._v(" 6 []")]),t._v(" "),s("p",[t._v("最常用的是表示数组"),s("code",[t._v("[1,2,3]")]),t._v("与数组下标"),s("code",[t._v("arr[1]")]),t._v("，也可以作为对象的属性名"),s("code",[t._v("obj['key']")]),t._v("，支持使用变量作为属性名"),s("code",[t._v("obj[key]")]),t._v("（key不仅可以是符合规则的字符串，也可以是Symbol）。")]),t._v(" "),s("h3",{attrs:{id:"_7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7","aria-hidden":"true"}},[t._v("#")]),t._v(" 7 .")]),t._v(" "),s("p",[t._v("点运算符的功能是[]的子集，当属性名为常量时可以用于设置、获取对象属性"),s("code",[t._v("obj.key")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键字","aria-hidden":"true"}},[t._v("#")]),t._v(" 关键字")]),t._v(" "),s("h3",{attrs:{id:"new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new","aria-hidden":"true"}},[t._v("#")]),t._v(" new")]),t._v(" "),s("p",[t._v("从构造函数派生出对象，构造函数的this指向创建的对象。")]),t._v(" "),s("h3",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete","aria-hidden":"true"}},[t._v("#")]),t._v(" delete")]),t._v(" "),s("p",[t._v("用于删除对象属性，不可用于删除对象。")]),t._v(" "),s("h2",{attrs:{id:"循环体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环体","aria-hidden":"true"}},[t._v("#")]),t._v(" 循环体")]),t._v(" "),s("h3",{attrs:{id:"array-foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-foreach","aria-hidden":"true"}},[t._v("#")]),t._v(" Array.forEach")]),t._v(" "),s("p",[s("code",[t._v("Array.forEach(function(currentValue, index, arr), thisValue)")])]),t._v(" "),s("p",[t._v("由于是以传入函数的形式遍历，forEach无法使用return从外部函数体返回，由于是数组的一种方法，也不支持break跳出循环。")]),t._v(" "),s("h3",{attrs:{id:"for…in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for…in","aria-hidden":"true"}},[t._v("#")]),t._v(" for…in")]),t._v(" "),s("p",[s("code",[t._v("for(let item in obj)")])]),t._v(" "),s("p",[t._v("for…in支持遍历各种对象，它的item是对象的key，总是string类型。这种方法不稳定，不同时候结果的顺序可能不一致。如果用于数组，还有一个问题是所有属性也包括数组元素以外的自定义属性。")]),t._v(" "),s("h3",{attrs:{id:"for…of"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for…of","aria-hidden":"true"}},[t._v("#")]),t._v(" for…of")]),t._v(" "),s("p",[s("code",[t._v("for(let item of obj)")])]),t._v(" "),s("p",[t._v("首先，它没有for…in的缺点，其次，也没有forEach的缺点。for…of支持数组、字符串、Set、Map和其他有iterable接口的对象，但不支持普通对象（会提示"),s("code",[t._v("is not iterable")]),t._v("）。")]),t._v(" "),s("h3",{attrs:{id:"iterable接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iterable接口","aria-hidden":"true"}},[t._v("#")]),t._v(" iterable接口")]),t._v(" "),s("p",[t._v("对象的"),s("code",[t._v("[Symbol.iterator]")]),t._v("属性指向其默认的遍历器。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myIterable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmyIterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("myIterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[ 1, 2, 3 ]")]),t._v("\n")])])]),s("h2",{attrs:{id:"内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 内置对象")]),t._v(" "),s("h3",{attrs:{id:"math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math","aria-hidden":"true"}},[t._v("#")]),t._v(" Math")]),t._v(" "),s("h2",{attrs:{id:"函数简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数简介")]),t._v(" "),s("p",[t._v("普通函数都是Function对象的实例，而构造函数生成的函数是Object的实例。相比普通对象，函数多了可被调用的特征。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("'Function'与‘function’的不同")]),t._v(" "),s("p",[t._v("‘Function’是JS的内置对象，而'function'是一个声明函数的关键字。")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("和其他语言函数的区别")]),t._v(" "),s("p",[t._v("由于JS是弱类型语言，函数无法指定形参类型与返回类型，同时也无法限制传入参数的个数，因此没有重载的特性。函数内部可以通过"),s("strong",[t._v("arguments对象")]),t._v("获取实参。")])]),t._v(" "),s("h2",{attrs:{id:"this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this","aria-hidden":"true"}},[t._v("#")]),t._v(" this")]),t._v(" "),s("p",[t._v("this指向调用当前函数的对象，如果没有对象调用，那么this==window。在箭头函数中，this指向与环境中相同。bind、call、reply方法都可以修改this。")]),t._v(" "),s("h3",{attrs:{id:"绑定this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定this","aria-hidden":"true"}},[t._v("#")]),t._v(" 绑定this")]),t._v(" "),s("p",[t._v("绑定this的4种方法，按优先级从低到高排序分别是默认绑定、隐式绑定、显式绑定、new绑定。其中apply()与call()属于显式绑定。")]),t._v(" "),s("h4",{attrs:{id:"默认绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" 默认绑定")]),t._v(" "),s("p",[t._v("全局环境中、函数独立调用时（即使被嵌套、包括立即执行函数），this指向window。有时候被嵌套的函数想获得上层函数的this，可以使用"),s("code",[t._v("var that = this")]),t._v("语句传递this值。")]),t._v(" "),s("h4",{attrs:{id:"隐式绑定-方法调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式绑定-方法调用","aria-hidden":"true"}},[t._v("#")]),t._v(" 隐式绑定/方法调用")]),t._v(" "),s("p",[t._v("this的值是调用该函数的对象。如a.b()中b内部的this指向a。只有直接调用"),s("code",[t._v("obj.func()")]),t._v("时才会传递this，否则this仍指向window。函数虽然可以属于一个对象，但函数不会与对象绑定this。")]),t._v(" "),s("p",[t._v("这些不能传递this的场景包括赋值、传参、内置函数（如setTimeout）、间接引用（对象的属性赋值时的立即执行函数，如"),s("code",[t._v("(p.foo = o.foo)()")]),t._v("，this为window）等。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'window'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//window")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//赋值会丢失this")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" func1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//window")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//作为参数传递也会丢失this")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("func2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//window")]),t._v("\n")])])]),s("h4",{attrs:{id:"显示绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" 显示绑定")]),t._v(" "),s("p",[t._v("即使用call、apply、bind方法绑定this到对象上。JS还新增了许多内置函数提供thisValue选项，如数组的迭代方法map、forEach、filter、some、every。")]),t._v(" "),s("h4",{attrs:{id:"new绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" new绑定")]),t._v(" "),s("p",[t._v("new的作用是从构造函数返回新对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructorA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("constructorA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n")])])]),s("p",[t._v("需要注意如果constructor没有返回值，那么构造的对象就是返回值。而其中的this永远指向obj，即新生成的对象，即使"),s("code",[t._v("let newObj = new obj.constructorA()")]),t._v("，this也会指向newObj，而不是obj。")]),t._v(" "),s("h3",{attrs:{id:"this与函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this与函数","aria-hidden":"true"}},[t._v("#")]),t._v(" this与函数")]),t._v(" "),s("p",[t._v("this的四种绑定方法其实也对应函数的四种调用方式，包括函数调用(func)、方法调用（obj.func）、间接调用（call、apply）、构造函数调用（new）。")]),t._v(" "),s("h3",{attrs:{id:"实现bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现bind","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现bind")]),t._v(" "),s("p",[s("code",[t._v("function.bind(thisArg[,arg1[,arg2[,...]]])")])]),t._v(" "),s("p",[t._v("bind提供了两个功能，一个是传递this，另一个是传递参数（之后传参数会位于这些参数后面），它返回绑定后的函数。")]),t._v(" "),s("p",[t._v("首先，我们要传递this，需要通过方法调用来完成，bind的this是原函数，我们要怎么返回绑定好的函数呢？🤔")]),t._v(" "),s("p",[t._v("可以想到，我们先把函数绑定到那个环境上去，但这就是bind的功能啊。实际上，我们应该返回一个全新函数，而这个新函数的执行结果与原函数+thisArg一致。")]),t._v(" "),s("p",[t._v("那么先不考虑传递参数，只考虑this的情况。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myBind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("thisValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样我们就已经实现了bind最基本的功能——绑定this，但我们向thisValue添加了属性。其实我们只用保证结果正确，因此可以删除添加的属性，用临时变量替代。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myBind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("thisValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getResult")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("thisValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("细心的朋友不难看出，getResult和call、apply有着相似的功能，即返回绑定某个this值后的执行结果。也就是说，bind其实是基于call和apply实现的。但为了方便理解整个概念，我先介绍了bind。")]),t._v(" "),s("h4",{attrs:{id:"call和apply"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call和apply","aria-hidden":"true"}},[t._v("#")]),t._v(" call和apply")]),t._v(" "),s("p",[t._v("明白了基本原理之后，我们来研究如何传入参数。首先，我们应该知道所有参数都可以在aruguments对象中找到，我们先看一下它的结构：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printArguments")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printArguments")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[Arguments] { '0': 1, '1': 2, '2': 3 }")]),t._v("\n")])])]),s("p",[t._v("Arguments是一个特殊的对象，它不是数组，但具有数组的许多特征，这里把它当作数组。")]),t._v(" "),s("p",[t._v("先看"),s("code",[t._v("function.call(thisArg,arg1,arg2,...)")]),t._v("，我们需要把后面的参数传入函数。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myCall")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n  thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("再看看"),s("code",[t._v("function.apply(thisArg,[argsArray])")]),t._v("，我们转换一下参数形式就行。需要注意我们的argsArray不能为空，如果为空，parameters为undefined，再使用扩展运算符就会报错"),s("code",[t._v("is not iterable")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myApply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n  thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"可以完善的一些地方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可以完善的一些地方","aria-hidden":"true"}},[t._v("#")]),t._v(" 可以完善的一些地方")]),t._v(" "),s("p",[t._v("如果没有传this值，我们可以让默认值为window，如果没有传argsArray，让默认值为[]，这里拿apply作为例子。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myApply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("thisValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("parameters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_func\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我们的bind也可以改造成使用apply的模式。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myBind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myApply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("现在还可以继续考虑两个问题：如果不能使用…运算符怎么办？如果绑定的对象已经有了_func属性或者不能设置属性怎么办？")]),t._v(" "),s("p",[t._v("先看如何替代…运算符。如果不能使用…运算符，我们就不能方便地向函数传递任意多个参数，可以使用eval()解析生成的字符串，也可以用"),s("code",[t._v("new Function([arg1[,arg2[,...argN]],]functionBody)")]),t._v("结合读取arguments数组读取任意多个参数，也是通过解析生成的字符串。")]),t._v(" "),s("p",[t._v("使用不重复的属性。ES6提供了symbol()用于标志唯一的事物，它可以以作为对象的属性，我们仍以apply作为例子。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myApply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("thisValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("parameters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" _func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" thisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此外还可以用Math.random()生成一个不太可能重复的属性名。")]),t._v(" "),s("h2",{attrs:{id:"作用域-scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域-scope","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域 Scope")]),t._v(" "),s("p",[t._v("作用域即变量和函数的可访问范围和生命周期。")]),t._v(" "),s("h3",{attrs:{id:"变量作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量作用域")]),t._v(" "),s("p",[t._v("可以分为全局作用域、函数内作用域（包括嵌套函数）、块级作用域。局部变量可以在局部覆盖同名全局变量。")]),t._v(" "),s("h3",{attrs:{id:"作用域链-scope-chain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链-scope-chain","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域链 Scope Chain")]),t._v(" "),s("p",[t._v("作用域链决定了函数能访问变量的范围，组织了访问变量的顺序，在解析标识符时一级一级地按顺序查找函数和变量。需要注意的是，JS根据函数定义的位置查找，而非执行的位置。")]),t._v(" "),s("h4",{attrs:{id:"执行环境-执行上下文-execution-context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行环境-执行上下文-execution-context","aria-hidden":"true"}},[t._v("#")]),t._v(" 执行环境/执行上下文 Execution Context")]),t._v(" "),s("p",[t._v("执行环境定义了变量与函数能访问的数据，包括全局、函数内、eval、块级作用域等。")]),t._v(" "),s("p",[t._v("执行环境包括至少3个重要的属性：作用域链、变量对象和this（按创建顺序排序）。这里关注前两个。")]),t._v(" "),s("h4",{attrs:{id:"变量对象-variable-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量对象-variable-object","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量对象 Variable Object")]),t._v(" "),s("p",[t._v("每个执行环境都有与之关联的变量对象，它包括了环境中所有的变量和函数。全剧环境下的变量对象称为VO。")]),t._v(" "),s("p",[t._v("所有的变量和函数即函数声明、变量声明、函数形参。不包括匿名函数。")]),t._v(" "),s("h4",{attrs:{id:"活动对象-activation-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#活动对象-activation-object","aria-hidden":"true"}},[t._v("#")]),t._v(" 活动对象 Activation Object")]),t._v(" "),s("p",[t._v("当环境是函数时，活动对象就是变量对象。活动对象至少包含arguments对象（即函数参数）。有很多资料提到函数中不能直接访问VO，而以AO替代，不过反正这两个都是不能用JS代码打印出来的。")]),t._v(" "),s("p",[t._v("Arguments对象至少包括callee（对当前函数的引用）、length（真正传递参数的个数）、properties-indexs（函数的参数值），注意Arguments并不包含this。")]),t._v(" "),s("h4",{attrs:{id:"作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("p",[t._v("从外层到函数乃至嵌套函数内，多个执行环境形成了一个程序执行栈，同时也形成了一个指向多个环境的链表，即作用域链。")]),t._v(" "),s("p",[t._v("作用域链包括VO与所有上级的作用域。")]),t._v(" "),s("h2",{attrs:{id:"数组方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组方法")]),t._v(" "),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map","aria-hidden":"true"}},[t._v("#")]),t._v(" map")]),t._v(" "),s("p",[s("code",[t._v("array.map(function(currentValue,index,arr),thisValue)")])]),t._v(" "),s("p",[t._v("map的作用是按回调函数的规则从原数组映射出一个新数组（作为返回值）。")]),t._v(" "),s("p",[t._v("从函数原型可以看出，回调函数可以得到当前元素的值、索引、原数组，处理后的值应作为返回值，还能传入this对象。")]),t._v(" "),s("p",[t._v("currentValue和index以及arr是只读的，但arr是对象，currentValue也可能是对象，此时可以修改属性或执行方法。")]),t._v(" "),s("h3",{attrs:{id:"every"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#every","aria-hidden":"true"}},[t._v("#")]),t._v(" every")]),t._v(" "),s("h3",{attrs:{id:"some"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#some","aria-hidden":"true"}},[t._v("#")]),t._v(" some")]),t._v(" "),s("h3",{attrs:{id:"foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach","aria-hidden":"true"}},[t._v("#")]),t._v(" forEach")]),t._v(" "),s("h3",{attrs:{id:"reduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reduce","aria-hidden":"true"}},[t._v("#")]),t._v(" reduce")]),t._v(" "),s("h3",{attrs:{id:"push、pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push、pop","aria-hidden":"true"}},[t._v("#")]),t._v(" push、pop")]),t._v(" "),s("h3",{attrs:{id:"shift、unshift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shift、unshift","aria-hidden":"true"}},[t._v("#")]),t._v(" shift、unshift")]),t._v(" "),s("h3",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice","aria-hidden":"true"}},[t._v("#")]),t._v(" slice")]),t._v(" "),s("h3",{attrs:{id:"indexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof","aria-hidden":"true"}},[t._v("#")]),t._v(" indexOf")]),t._v(" "),s("h3",{attrs:{id:"sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort","aria-hidden":"true"}},[t._v("#")]),t._v(" sort")]),t._v(" "),s("h3",{attrs:{id:"reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse","aria-hidden":"true"}},[t._v("#")]),t._v(" reverse")]),t._v(" "),s("h3",{attrs:{id:"splice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splice","aria-hidden":"true"}},[t._v("#")]),t._v(" splice")]),t._v(" "),s("h3",{attrs:{id:"concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat","aria-hidden":"true"}},[t._v("#")]),t._v(" concat")]),t._v(" "),s("h3",{attrs:{id:"join"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join","aria-hidden":"true"}},[t._v("#")]),t._v(" join")]),t._v(" "),s("h3",{attrs:{id:"tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring","aria-hidden":"true"}},[t._v("#")]),t._v(" toString")]),t._v(" "),s("h2",{attrs:{id:"对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象方法")]),t._v(" "),s("h3",{attrs:{id:"object-assign"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-assign","aria-hidden":"true"}},[t._v("#")]),t._v(" Object.assign()")]),t._v(" "),s("h2",{attrs:{id:"string方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string方法","aria-hidden":"true"}},[t._v("#")]),t._v(" String方法")]),t._v(" "),s("h3",{attrs:{id:"substring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substring","aria-hidden":"true"}},[t._v("#")]),t._v(" substring")]),t._v(" "),s("h3",{attrs:{id:"split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#split","aria-hidden":"true"}},[t._v("#")]),t._v(" split")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("h3",{attrs:{id:"模板字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" 模板字符串")]),t._v(" "),s("p",[t._v("`我买了${a}箱苹果``")]),t._v(" "),s("h3",{attrs:{id:"变量作用域-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量作用域-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量作用域")]),t._v(" "),s("p",[t._v("JS中变量的作用域可以是全局，也可以是局部（函数参数和局部变量），同名局部变量会")]),t._v(" "),s("h4",{attrs:{id:"函数作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数作用域")]),t._v(" "),s("p",[t._v("JS的函数作用域是指在函数内声明的变量始终可见（变量提升）。")]),t._v(" "),s("h5",{attrs:{id:"作用域链-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("p",[t._v("JS查找上级作用域时，根据定义的位置查找，与执行环境无关。")]),t._v(" "),s("h2",{attrs:{id:"参考目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考目录")]),t._v(" "),s("p",[t._v("this")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/xiaohuochai/p/5735901.html")]),t._v(" "),s("p",[t._v("JavaScript")]),t._v(" "),s("p",[t._v("https://www.liaoxuefeng.com/wiki/1022910821149312")]),t._v(" "),s("p",[t._v("ECMA Script 6")]),t._v(" "),s("p",[t._v("http://es6.ruanyifeng.com/")]),t._v(" "),s("p",[t._v("Execution Context")]),t._v(" "),s("p",[t._v("https://juejin.im/entry/58edde2761ff4b00581b93ff")]),t._v(" "),s("p",[t._v("Symbol")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/diligenceday/p/5462733.html")])])}],!1,null,null,null);a.default=e.exports}}]);